services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api_gateway
    networks:
      - webnet
  api_gateway:
    build: ./gateway
    volumes:
      - ./gateway/app:/app
    ports:
      - "8000:8001"
    environment:
      - USER_SERVICE_URL=http://user_service:8001
    depends_on:
      user_service:
        condition: service_started
    networks:
      - webnet
    
  user_service:
    build: ./services/user_service
      # 디렉토리 이름
    volumes:
      - ./services/user_service/app:/app
    ports:
      - "8080:8001"
      # docker compose에서도 8000을 보내는데 8080:->8000 뒤에 들어온다.  
    environment:
      - DATABASE_URL=mysql+asyncmy://${DB_USER}:${DB_PASSWORD}@user_db:3306/user_db
      - REDIS_URL=${REDIS_URL}
    depends_on:
      user_db:
        condition: service_healthy
      redis_db:
        condition: service_started
    networks:
      - webnet

  user_db:
    image: mysql:8.0
    ports:
      - "33061:3306"
      # local:backend
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=${USER_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=user_db
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webnet
  
  redis_db:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      - webnet
networks:
  webnet:
